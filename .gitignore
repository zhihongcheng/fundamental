# KNN 分类 (2元)
from sklearn.datasets import make_blobs
from sklearn.neighbors import KNeighborsClassifier
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
data = make_blobs(n_samples=200,centers=2,random_state=8)
X,y = data
#plt.scatter(X[:,0],X[:,1],c =y ,cmap = plt.cm.spring, edgecolor = 'k')
#plt.show()


import numpy as np
clf = KNeighborsClassifier()
clf.fit(X,y)

x_min ,x_max = X[:,0].min() -1,X[:,0].max()+1
y_min ,y_max = X[:,1].min() -1,X[:,1].max()+1
xx,yy = np.meshgrid(np.arange(x_min,x_max,.02),
                    np.arange(y_min,y_max,.02))
Z = clf.predict(np.c_[xx.ravel(),yy.ravel()])
Z = Z.reshape(xx.shape)
plt.pcolormesh(xx,yy,Z,cmap=plt.cm.Spectral)
plt.scatter(X[:,0],X[:,1],c =y ,cmap = plt.cm.spring, edgecolor = 'k')
plt.xlim(xx.min(),xx.max())
plt.ylim(yy.min(),yy.max())
plt.scatter(5.5,3.5,marker = '*',c = 'red',s = 500)
plt.show()
